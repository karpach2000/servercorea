package com.parcel.tools.web.websockets.games.thirtyyears

enum class Commands {

    /**
     * Сообщение об ошибке
     */
    ERROR,
    /******GAME STATE******/

    /**
     * Введение реальной отмазки.
     * Сервер игры рассылает WEB страницам событие от которого необходимо отмазаться.
     * Страницы переходят в режим введения реальной отмазки.
     */
    ENTER_REAL_EXCUTE_EVENT,

    /**
     * Введение фальшивой отмазки.
     * Сервер игры рассылает WEB страницам событие от которого необходимо отмазаться
     * так как это бы сделал игрок, чье событие сейчас отображается.
     * Страницы переходят в режим введения фальшивой отмазки.
     */
    ENTER_FALSH_EXCUTE_EVENT,

    /**
     * Голосование.
     * Сервер игры рассылает WEB страницам варианты за кого можно проголосовать.
     * ВЕБ страница переходит в режим голосования.
     */
    VOTE_EVENT,

    /**
     * Показывает пользователю результаты всей игры.
     * Сервер игры рассылает WEB страницам результаты финального голосования.
     * Страница при этом переходит в режим просмотра результатов финального голосования.
     */
    SHOW_FINAL_RESULTS_EVENT,
    /**
     * Демонстрирует результаты голосования пользователям.
     * Сервер игры рассылает WEB страницам результаты голосования.
     * Страница при этом переходит в режим просмотра результатов голосования.
     */
    SHOW_RESULTS_EVENT,


    /**********************/
    //PARRENT

    /**
     * Пинг
     */
    PING,
    /**
     * Пинг
     */
    PONG,

    /**
     * Создать новую сессию.
     *
     *              Устанговление соединения для создания новой сессии
     *  1) Web страница при необходимости взаимодействия с сервером игры при помощи
     *      веб сокетов устанавливает коннект.
     *  2) Web страница отправляет реквест с командой CREATE_SESSION_IF_NOT_EXIST в котором соответсвующих полях
     *      передается имя пользователя, id и пароль сессии.
     */
    CREATE_SESSION_IF_NOT_EXIST,
    /**
     * Подсоединится к существующей.
     *
     *              Устанговление соединения для соединения с существующей скссией
     *  1) Web страница при необходимости взаимодействия с сервером игры при помощи
     *      веб сокетов устанавливает коннект.
     *  2) Web страница отправляет реквест с командой CONNECT_TO_SESSION в котором соответсвующих полях
     *      передается имя пользователя, id и пароль сессии.
     */
    CONNECT_TO_SESSION,

    /**
     * Добавить пользователя.
     *       Веб страница сообщает серверу игры о том что она добавляет пользователя.
     */
    ADD_USER,
    /**
     * Событие добавить пользователя.
     *      Сервер игры сообщает ВЕБ страницам от том, был добавлен пользователь
     *      (в поле дата при этом передается список всех пользователей !!!пока в произвольном формате!!!)
     */
    ADD_USER_EVENT,

    /**
     * Команда начала игры (TX).
     *   Страница сообщает серверу игры о том что пользователь нажал кнопку начала игры.
     *
     */
    START_GAME,

    /**
     * Событие начала игры.
     *      Сервер игры сообщает ВЕБ страницам от том что игра началась
     */
    START_GAME_EVENT,

    /**
     * Команда остановки игры.
     *      Веб страница сообщает серверу игры о том что пользователь нажал кнопку окончания игры.
     *      Сервер игры сообщает ВЕБ страницам от том что игра закончилась.
     */
    STOP_GAME,

    /**
     * Команда остановки игры.
     *      Сервер игры сообщает ВЕБ страницам от том что игра закончилась.
     */
    STOP_GAME_EVENT,

    /**
     * Запуск таймера.
     *  Сервер игры сообщает ВЕБ страницам от том что игра закончилась.
     *  В поле дата передается время оставшееся до истиечения срока работы таймера (мс)
     */
    START_TIMER_EVENT,



    //GAME

    /**
     * Получить текущий статус игры.
     * В поле data возвращает текущий статус игры.
     * (после ответа (а точнее перед:) ) на этот реквест, веь странице приходит адекватный евент)
     */
    GET_GAME_STATUS,



    /**
     * Ввести реальную отмазку.
     * ВЕБ страница сообщает серверу игры реальную отмазку которую ввел пользователь.
     * В поле data передается текс реальной отмазки.
     */
    SET_REAL_EXCUTE,

    /**
     *Ввести фальшивую отмазку
     * ВЕБ страница сообщает серверу игры фальшивую отмазку которую ввел пользователь.
     * В поле data передается текс фальшивой отмазки.
     */
    SET_FALSH_EXCUTE,

    /**
     * Проголосовать за тот или иной вариант
     * ВЕБ страница сообщает серверу игры за какой вароиант проголосовал пользователь.
     * В поле data передается текс ответа, за который был отдан голос.
     */
    SET_VOTE,
    /**
     * Закончить раунд голосования.
     * ВЕБ страница сообщает о том что пользователь нажал кнопку ROUND??
     *  это значит что раунд окончен и все насмотрелись на результтаты голосования.
     */
    ROUND


}